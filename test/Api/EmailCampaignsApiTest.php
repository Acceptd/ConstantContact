<?php
/**
 * EmailCampaignsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ConstantContact\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AppConnect V3
 *
 * The Constant Contact, Inc. V3 public API, for building integrations with Constant Contact, the leading small-business email marketing platform.
 *
 * The version of the OpenAPI document: 3.0.2400
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ConstantContact\Client\Test\Api;

use 'ConstantContact\Client\Configuration;
use 'ConstantContact\Client\ApiException;
use 'ConstantContact\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EmailCampaignsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ConstantContact\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EmailCampaignsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createEmailCampaignUsingPOST
     *
     * POST (Create) a New Email Campaign.
     *
     */
    public function testCreateEmailCampaignUsingPOST()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createResendToNonOpenersUsingPOST
     *
     * POST a Resend to Non-openers Campaign Activity.
     *
     */
    public function testCreateResendToNonOpenersUsingPOST()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteResendToNonOpenersUsingDELETE
     *
     * DELETE a Resend to Non Openers Activity.
     *
     */
    public function testDeleteResendToNonOpenersUsingDELETE()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeEmailCampaignUsingDELETE
     *
     * DELETE an Email Campaign.
     *
     */
    public function testRemoveEmailCampaignUsingDELETE()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for renameEmailCampaignUsingPATCH
     *
     * PATCH (Update) an Email Campaign Name.
     *
     */
    public function testRenameEmailCampaignUsingPATCH()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveEmailCampaignActivityUsingGET
     *
     * GET a Single Email Campaign Activity.
     *
     */
    public function testRetrieveEmailCampaignActivityUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveEmailCampaignUsingGET
     *
     * GET Details About a Single Email Campaign.
     *
     */
    public function testRetrieveEmailCampaignUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveEmailCampaignsUsingGET
     *
     * GET a Collection of Email Campaigns.
     *
     */
    public function testRetrieveEmailCampaignsUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveResendToNonOpenersUsingGET
     *
     * GET Details for a Resend to Non-openers Campaign Activity.
     *
     */
    public function testRetrieveResendToNonOpenersUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveXrefMappingsUsingGET
     *
     * GET a Collection of V2 and V3 API Email Campaign Identifiers.
     *
     */
    public function testRetrieveXrefMappingsUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmailCampaignActivityUsingPUT
     *
     * PUT (Update) An Email Campaign Activity.
     *
     */
    public function testUpdateEmailCampaignActivityUsingPUT()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
